---
import GitHub from "../icons/github.astro"
import NextJS from '../icons/github.astro'
import Tailwind from "../icons/github.astro"
import Link from "../icons/github.astro"
import Unity from '../icons/unity.astro'
import LinkButton from '../components/LinkButton.astro'
import React from "../icons/react.astro"
import Css from "../icons/css.astro"
import JavaScript from '../icons/javascript.astro'

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  UNITY: {
    name: "Unity",
    class: "bg-black text-white",
    icon: Unity,
  },
  REACT: {
    name: "React",
    class: "bg-[#003159] text-white",
    icon: React
  },
  CSS: {
    name: "CSS",
    class: "bg-[#003159] text-white",
    icon: Css
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-black text-white",
    icon: JavaScript
  }
}
const PROJECTS = [
  {
    title: "Exoplanet Viewer",
    description:
      "Exoplanet Viewer es un programa hecho en Unity y C#, en el que se hace uso de la API de la NASA (NASA Exoplanet Archive) para poder conseguir la información de Exoplanetas confirmados y por medio del motor de Unity hacer una representación gráfica",
    link: "https://ga-b0.itch.io/exoplanets-viewer",
    github: "https://github.com/ga-b0/exoplanets",
    image: "/src/images/exoplanet.webp",
    tags: [TAGS.UNITY],
  },
  {
    title: "Tic Tac Toe",
    description:
      "Videojuego clásico del Tic Tac Toe hecho desde cero con React y CSS.",
    link: "https://tic-tac-toe-gab.netlify.app/",
    github:"https://github.com/ga-b0/tic-tac-toe",
    image: "/src/images/tic-tac-toe.webp",
    tags: [TAGS.REACT, TAGS.CSS],
  },
  {
    title: "Conecta 4",
    description:
      "Videojuego del Conecta 4 para dos jugadores hecho desde cero con React y CSS",
    link: "https://conecta-4-gab.netlify.app/",
    github: "https://github.com/ga-b0/conecta-4",
    image: "/src/images/conecta-4.webp",
    tags: [TAGS.REACT, TAGS.CSS],
  },
  {
    title: "TODO App",
    description:
      "Todo App hecha desde cero utilizando JavaScript Vanilla y CSS, donde el usuario puede escoger el tema de su preferencia ya sea el claro y oscuro, además de filtrar las tareas por activas y pendientes",
    link: "https://todoapp-gab.netlify.app/",
    github: "https://github.com/ga-b0/todo-app",
    image: "../images/todo-app.webp",
    tags: [TAGS.JAVASCRIPT, TAGS.CSS],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Imagen del Proyecto" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-200 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-400 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-6" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



